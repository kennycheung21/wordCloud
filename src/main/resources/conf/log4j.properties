log4j.rootCategory=WARN,kc

# Producer conf
kafka.logs.dir=log

log4j.logger.com.Kenny.SDE.kafka.WordCloudProducer$ = INFO,kc
log4j.logger.com.Kenny.SDE.util.URLReader = INFO,kc
log4j.logger.com.Kenny.SDE.util.ProducerCallback = INFO,kc
log4j.additivity.com.Kenny.SDE=false

#log4j.logger.com.Kenny.SDE.kafka$ = INFO, kc

log4j.appender.kc=org.apache.log4j.DailyRollingFileAppender
log4j.appender.kc.DatePattern='.'yyyy-MM-dd
log4j.appender.kc.File=${kafka.logs.dir}/wordCloudProducer.log
log4j.appender.kc.layout=org.apache.log4j.PatternLayout
log4j.appender.kc.layout.ConversionPattern=[%d] %p %m (%c)%n

log4j.logger.kafka=INFO, kc
log4j.logger.kafka.network.RequestChannel$=WARN, kc
log4j.additivity.kafka.network.RequestChannel$=false

log4j.logger.kafka.request.logger=WARN, kc
log4j.additivity.kafka.request.logger=false

#Spark streaming conf
# Set everything to be logged to the console for yarn
log4j.logger.com.Kenny.SDE.util.AmazonProduct=DEBUG, stdout
log4j.logger.com.Kenny.SDE.util.SparkCallback=DEBUG, stdout
log4j.logger.com.Kenny.SDE.spark.wordCloud$=DEBUG, stdout

log4j.additivity.com.Kenny.SDE.spark.wordCloud$=DEBUG, stdout

log4j.logger.org.apache.spark.deploy.yarn.YarnAllocator=OFF, console

log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.err
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n

# Settings to quiet third party logs that are too verbose
log4j.logger.org.eclipse.jetty=WARN
log4j.logger.org.eclipse.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO